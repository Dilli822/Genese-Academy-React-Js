@using NGX.Web.Areas.AdminDomain.Models;
@using SharedLib.Misc;
@using guestACCESS.Kernel.TripManagement;
@using guestACCESS.DataAccess.CacheRepository;
@using guestACCESS.Kernel.DMCManagement;
@model guestACCESS.Kernel.TripManagement.Trip
@{

    ViewBag.Title = "Build Inspiration";
    Layout = "~/Views/Shared/_LayoutDIY.cshtml";
    var tarrifModel = (EventTarrifModel)ViewData["EventTarrifList"];
    EventListModel eventsListModel = new EventListModel(Model.TripId);
    eventsListModel.Execute();
    var result = eventsListModel.ResultSet;
    var parentCity = tarrifModel.HasParentCity;
    @Html.Hidden("ParentCity", parentCity)
    var dmcInfo = new guestACCESS.Kernel.DMCManagement.DMC(Model.DMCId);
    var dmcOption = new guestACCESS.Kernel.DMCManagement.DMCOption((dmcInfo != null && dmcInfo.ParentDMCId > 0) ? dmcInfo.ParentDMCId.Value : dmcInfo.DMCId);
    var hotelList = (Dictionary<string, string>)ViewData["HotelUrls"];
    var flightUrlList = (Dictionary<string, string>)ViewData["flightBookingUrl"];
    var cityName = Cache_City.Instance.GetCityName(Model.CityId);
    var urlHotelPlanner = hotelList.ContainsKey(EnabledHotelType.HotelPlanner.ToString()) ? hotelList[EnabledHotelType.HotelPlanner.ToString()] : "";

    var dmcCustomDashboard = guestACCESS.Kernel.DashboardCustomization.DashboardCustomization.GetList(Model.DMCId);
    var customDashboard = dmcCustomDashboard != null ? dmcCustomDashboard : guestACCESS.Kernel.DashboardCustomization.DashboardCustomization.GetList();


    var cache_city = guestACCESS.DataAccess.CacheRepository.Cache_CityEntity.Instance.GetCache();
    var cache_country = guestACCESS.DataAccess.CacheRepository.Cache_CountryEntity.Instance.GetCache();
    var city = cache_city.Values.FirstOrDefault(a => a.CityId == Model.CityId);
    var Country = cache_country.Values.FirstOrDefault(a => a.CountryId == (city != null ? city.CountryId : 0));
}
@section styles{
    <!--dropzone-->
    <link href="/Content/assets/plugins/dropzone-master/dist/dropzone.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/plugins/cropper/cropper.min.css" rel="stylesheet" />
    <link href="/Content/assets/plugins/multiselect/css/multi-select.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/assets/plugins/HemantNegi-jquery.sumoselect-ae0557d/docs/stylesheets/sumoselect.min.css" rel="stylesheet" />
    <style>
        .slides ul.slidesjs-pagination {
            display: none;
        }



        .l30 {
            left: 30px !important;
        }

        .dropzone {
            border: 2px dashed #9124a3;
        }

        .select2-selection {
            padding: 10px 0px 0 6px !important;
            height: 54px !important;
        }

        .select2-container {
            margin: 0 0 8px 0px !important;
        }


        .select2-container--default .select2-selection--single .select2-selection__placeholder {
            color: #0071bc;
            font-weight: 600;
        }


        .select2-container--default .select2-selection--single .select2-selection__rendered {
            color: #ababab !important;
        }


        .select2-container--default .select2-selection--single {
            border-bottom: 2px solid;
            border-left: 0px !important;
            border-right: 0px !important;
            border-top: 0px !important;
        }

        iframe {
            width: 100%;
        }

        .act-menu {
            display: flex
        }

            .act-menu .act-item {
                flex-basis: 33%;
                padding-left: 30px;
            }

                .act-menu .act-item label {
                    color: #000;
                }

        .img-responsive {
            height: 100% !important;
            width: 100% !important;
            object-fit: cover;
            max-width: initial;
        }

        .img-event {
            height: 150px !important;
            width: 100% !important;
        }

        .owl-stage {
            display: flex !important;
        }

        .scroll {
            max-height: 250px;
            height: 250px;
        }

        .ms-container {
            width: 100%;
        }

        #btnGroup {
            margin-bottom: 20px;
        }

        .pac-container {
            background-color: #fff;
            position: absolute !important;
            z-index: 1050;
            border-radius: 2px;
            border-top: 1px solid #d9d9d9;
            font-family: Arial,sans-serif;
            box-shadow: 0 2px 6px rgba(0,0,0,0.3);
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
            overflow: hidden;
        }

        #modal-open-meeting label.form-check-label {
            align-items: center;
            display: flex;
        }

        .filter-event .select2-container--default .select2-selection--single .select2-selection__arrow {
            top: 0px !important;
        }

        .uploaded-image img {
            height: auto !important;
        }

        .bookFlight {
            border: 0;
        }

        .text-center {
            text-align: center;
        }

        .align-left {
            text-align: left;
        }

        div#image {
            max-width: 50%;
            margin: 10px 1px;
        }

        #modal-event-group li {
            list-style: none;
        }
        #AddEventFromCatalogForm .select2-container {
            width:100% !important;
        }

        #modal-open-meeting label.form-check-label {
            /* align-items: center; */
            @* display: block!important; *@
            border: px solid red;
        }

        .select2-container--default .select2-selection--single .select2-selection__placeholder {
            font-size: .85rem;
            border: px solid red;
            }

          @@media only screen and (max-width: 990px){
            .scroll_fixed .group-menu.diy-wizards{
                top: -150px;
            }}

           @@media only screen and (max-width: 1440px) and (min-width: 990px){
            .scroll_fixed .group-menu.diy-wizards {
                top: -170px;
            } }

            @@media only screen and (min-width: 1440px){
            .group-menu.diy-wizards ,
            .scroll_fixed .group-menu.diy-wizards{
               width: 180px!important;
            } }

            @@media only screen and (min-width: 1180px) and (max-width: 1440px){
            .group-menu.diy-wizards ,
            .scroll_fixed .group-menu.diy-wizards{
               width: 150px!important;
            }}

          @@media only screen and (max-width: 1180px) and (min-width: 990px){
            .group-menu.diy-wizards ,
            .scroll_fixed .group-menu.diy-wizards{
               width: 120px!important;
            }}

         @@media only screen and (max-width: 990px) and (min-width: 800px){
            .group-menu.diy-wizards ,
            .scroll_fixed .group-menu.diy-wizards{
               width: 180px!important;
            }}

          @@media only screen and (max-width: 800px) and (min-width: 576px){
            .group-menu.diy-wizards ,
            .scroll_fixed .group-menu.diy-wizards{
               width: 130px!important;
            }}


            /* added on sept 22 2021 **/
            .select2-selection {
                padding: 10px 0px 0 6px !important;
                height: auto!important;
            }

            /* added on oct29 2021 **/
         .SumoSelect {
            width: 100%;
        }

         .SumoSelect .select-all{
            height: auto!important;
        }

        @@media only screen and (max-width: 800px){
                 .SumoSelect {
            width: 70%;}
        }

        @@media only screen and (max-width: 576px){
             .SumoSelect {
                     width: auto;
                     }
                }
    </style>
}

@section scripts{
    <script src="~/Content/assets/plugins/jqueryui/jquery-ui.min.js"></script>
    <script src="/Content/Scripts/mutipleForm.js"></script>
    <script src="/Content/Scripts/tableForm.js"></script>
    <script src="/Content/assets/plugins/jquery form/jquery.form.min.js"></script>
    @*<script src="~/Content/assets/plugins/jqueryui/jquery-ui.min.js"></script>*@
    <!--jquery slides -->
    <script src="/Content/material/js/jquery.slides.js"></script>
    <script src="~/Content/assets/plugins/jquery.scroll/jquery.jscroll.min.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/jscroll/2.3.2/jquery.jscroll.min.js"></script>*@
    @*<script src="/Content/assets/plugins/moment/moment.js"></script>*@
    <script src="/Content/assets/plugins/tinymce/tinymce.min.js"></script>
    <script src="/Content/assets/plugins/dropzone-master/dist/dropzone.js"></script>
    <script src="~/Content/assets/plugins/cropper/cropper.min.js"></script>
    <script src="~/Content/PageScripts/AdminDomain/EventTariff/DIYIndex.js"></script>
    <script src="~/Content/PageScripts/AdminDomain/OpenMeeting/OpenMeeting.js"></script>
    <script src="~/Content/Scripts/thumbnailHelper.js"></script>
    <script src="~/Content/assets/plugins/HemantNegi-jquery.sumoselect-ae0557d/docs/javascripts/jquery.sumoselect.min.js"></script>
    <script type="text/javascript">
        Dropzone.autoDiscover = false;
        $(document).ready(function () {

            var tm = new tariff();
            tm.tripId = '@Model.TripId';
            tm.cityId = '@Model.CityId';
            tm.eventsCount = @result.Count;
            tm.cityName = '@cityName';
            tm.imagePath = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(WebConfigValues.StaticContentSiteUrl + "/uploadfiles/welcomeimage.png"));
            //Events
            tm.createEventUrl = '@Url.Action("CreateEvent", "EventTariff")';
            tm.selectEventUrl = '@Url.Action("SearchEventTemplates", "EventTariff")';
            tm.addEventUrl = '@Url.Action("AddEventTemplateToTrip", "EventTariff")';
            tm.addEventFromCatalogUrl = '@Url.Action("AddEventFromCatalog", "EventTariff")';
            tm.diyEventTemplateDescriptionUrl = '@Url.Action("GetEventTemplateDescription")';
            tm.rescheduleArrivalVehicleUrl = '@Url.Action("ScheduleArrival", "Transportation")';
            tm.rescheduleDepartureVehicleUrl='@Url.Action("ScheduleDeparture", "Transportation")';
            //Suppliers
            tm.addSupplierUrl = '@Url.Action("CreateDIYSupplier", "EventTariff")';
            tm.selectSupplierUrl = '@Url.Action("SelectDIYSupplier", "EventTariff")';
            tm.diySupplierTemplateDescriptionUrl = '@Url.Action("GetDIYSupplierTemplateDescription")';
            tm.diyDeleteSupplierUrl = '@Url.Action("DeleteDIYSupplier", "EventTariff")';
            tm.getEventInfoUrl = '@Url.Action("GetEventInfo", "EventTariff")';
            //Supplies
            tm.createSupplyUrl = '@Url.Action("CreateSupply", "EventDetail")';
            tm.saveSupplyUrl = '@Url.Action("ManageSupply", "EventDetail")';
            tm.selectSupplyUrl = '@Url.Action("SelectDIYSupply", "EventTariff")';
            tm.diyEditSupplyUrl = '@Url.Action("ManageSupply", "EventDetail")';
            tm.diyDeleteSupplyUrl = '@Url.Action("DeleteSupply", "EventDetail")';
            tm.diySupplyTemplateDescriptionUrl = '@Url.Action("GetDIYSupplyTemplateDescription")';
            //Misc.
            tm.uploadImageUrl = '@Url.Action("UploadImage", "ImageMedia", new { area = "" })';
            tm.loadTypeUrl = '@Url.Action("GetActivityType", "CacheData", new { area = "" })';
            tm.refreshUrl = '@Url.Action("Index", "EventTariff")';
            tm.getSupplierInfoUrl = '@Url.Action("GetSupplierInfo", "EventTariff")';
            tm.getSupplyInfoUrl = '@Url.Action("GetDIYSupply", "EventTariff")';
            tm.removeEventUrl = '@Url.Action("RemoveEvent", "EventTariff")';
            tm.UpdateStandardEventUrl = '@Url.Action("UpdateStandardEvent", "EventTariff")';
            tm.scheduleTariffUrl = '@Url.Action("Index", "Participant", new { id = Model.TripId })';
            tm.plannerPoUrl = '@Url.Action("Index", "PlannerPO", new { id = Model.TripId })';
            //OpenMeeting
            tm.openMeetingUrl = '@Url.Action("GetOpenMeeting", "EventTariff")';
            tm.saveOpenMeeting = '@Url.Action("SaveOpenMeeting", "EventTariff")';
            //City
            tm.cachecityUrl = '@Url.Action("GetCityBasedOnUserIdentity", "CacheData", new { area = "" })';
            tm.getEventTemplateUrl = '@Url.Action("GetEventTemplates", "EventTariff", new { area = "admindomain" })';
            tm.eventDescriptionUrl = '@Url.Action("Description", "EventTariff")';
            tm.getCityNameUrl = '@Url.Action("GetCityName", "EventTariff")';
            tm.getEventMapUrl = '@Url.Action("GetEventMapById", "EventTariff")';
            tm.loadlocationUrl = '@Url.Action("GetLocation", "EventTariff")';
            tm.maplocationUrl = '@Url.Action("LoadMap", "EventTariff")';
            tm.sendPOToSupplierUrl = '@Url.Action("SendPOToSupplier", "EventTariff")';
            tm.arrivalTransportType = '@TransporationType.Arrival';
            tm.departureTransportType = '@TransporationType.Departure';
            tm.getEmailContentUrl = '@Url.Action("GetEmailTemplateContent", "Participant")';

            tm.searchActivityTemplate = '@Url.Action("SearchPreferredActivity", "EventTariff", new { area= "admindomain" })';
            tm.getDIYActivityTemplate = '@Url.Action("GetActivityTemplate", "EventTariff", new { area= "admindomain" })';
            tm.getActivityTemplateDescription = '@Url.Action("GetActivityTemplateDescription", "EventTariff", new { area= "admindomain" })';
            tm.addActivityTemplateUrl = '@Url.Action("AddActivity", "EventTariff", new { area= "admindomain" })';

            tm.addActivityTemplateToTripUrl = '@Url.Action("AddActivityToTrip", "EventTariff", new { area= "admindomain" })';
            tm.cancelCareyReservationUrl = '@Url.Action("CancelCarReservation", "Reservation", new { area = "admindomain" })';
            tm.eventGroupManageUrl = '@Url.Action("EventGroup", "EventTariff")';
            tm.removeEventGroupUrl = '@Url.Action("RemoveEventGroup", "EventTariff")';
            tm.eventGroupListUrl = '@Url.Action("EventGroupList", "EventTariff")';
            tm.eventStockUrl = '@Url.Action("ManageEventStock", "EventTariff")';
            tm.eventLoadUrl = '@Url.Action("GetEventList", "EventTariff")';
            tm.searchHotelUrl2 = '@Url.Action("GetHotels", "CacheData",new { area = "" })';

            tm.loadAirportUrl = '@Url.Action("SearchAirports", "CacheData", new { area = "" })';
            tm.loadCityAirportUrl = '@Url.Action("SearchCityAndAirport", "CacheData", new { area = "" })';
            tm.carRentUrl = '@Url.Action("CarRentPopup", "EventTariff", new { area = "AdminDomain" })';
            tm.cancelCarRentServiceUrl = '@Url.Action("CancelCarRental", "Reservation", new { area = "AdminDomain"})';
            tm.loadDropOffAirportUrl='@Url.Action("SearchAirportsWithId", "CacheData", new { area = "" })';
            @{
                double latitude = 33.501324, longitude= -111.925278;
                var tripInfo = new Trip(Model.TripId);
                if (tripInfo.HotelId > 0)
                {
                    var eventLocationCache =  Cache_EventLocation.Instance.GetCache();
                    var tripHotelInfo = eventLocationCache.FirstOrDefault(a => a.EventLocationId == tripInfo.HotelId);
                    if (tripHotelInfo!=null && tripHotelInfo.Latitude.HasValue)
                    {
                        latitude = tripHotelInfo.Latitude.Value;
                        longitude = tripHotelInfo.Longitude.Value;
                    }
                }
            }
            tm.latitude = "@latitude";
            tm.longitude = "@longitude";
            tm.init();
            var op = new openMeeting();
            op.tripId = '@Model.TripId';
            op.cityId = '@Model.CityId';
            op.eventsCount = @result.Count;
            op.cityName = '@cityName';
            op.imagePath = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(WebConfigValues.StaticContentSiteUrl + "/uploadfiles/welcomeimage.png"));

            //OpenMeeting
            op.uploadImageUrl = '@Url.Action("UploadImage", "ImageMedia", new { area = "" })';
            op.openMeetingUrl = '@Url.Action("GetOpenMeeting", "EventTariff")';
            op.saveOpenMeeting = '@Url.Action("SaveOpenMeeting", "EventTariff")';
            op.getEmailContentUrl = '@Url.Action("GetEmailTemplateContent", "Participant")';
            op.staticSiteUrl = '@WebConfigValues.StaticContentSiteUrl';
            op.removeSpecialEventIconUrl = '@Url.Action("RemoveIcon", "EventTariff")';
            op.init();

            LoadCitiesAndCountries = function (selector, placeholder) {
               
                var dmcId = '@Model.DMCId';

                $(selector).select2({
                    minimumInputLength: 2,
                    placeholder: placeholder,
                    ajax: {
                        url: '/CacheData/GetHotelPlannerCities',
                        type: "POST",
                        data: function (term) {
                            return {
                                dmcId: dmcId,
                                keyword: term.term
                            };
                        },
                        processResults: function (data) {
                            return {
                                results: $.map(data, function (item) {

                                    return {
                                        text: item.CityName + ', ' + item.CountryName,
                                        id: item.CityName + ',' + item.CountryName
                                    }
                                })
                            };
                        }
                    }
                });
            },

            $("#btn-flyusredirect").click(function () {
                $("#modal-flight").modal({ 'show': true, 'backdrop': 'static' });
                    });
            $("#btn-hotelPlanner").click(function () {
   
                $("#modal-hotel").modal({ 'show':true,'backdrop':'static'});
                    });
            LoadCitiesAndCountries('#Destination', 'Destination');

            $('#modal-hotel #StartDate').on('dp.change', function (ev) {
             
                var date2 = new Date($('#modal-hotel #StartDate').val());
                date2.setDate(date2.getDate() + 1);
                var end = moment(date2).format('MM/DD/YYYY');
                $('#modal-hotel #EndDate').val(end);
            });

            $("#btnBookHotel").click(function () {

                        var cityname = $("#Destination option:selected").text();
                        var startDate = $("#modal-hotel #StartDate").val();
                        var endDate = $("#modal-hotel #EndDate").val();
                        window.open('@urlHotelPlanner' + "/search/?city=" + cityname + "&InDate=" + startDate + "&OutDate=" + endDate + "&kw=" + '@Model.TripId', '_blank');
                    });

                });
        // $(document).ready(function () {
        //    var eventsCount = $("#EventsCount").val();
        //    if (eventsCount == null || eventsCount == 0) {
        //        $("#GetStartModal").modal({ show: true, backdrop: true });
        //    }
        //});
        $('#event').on('click', function () {

            $('div.eventSupplier').articulate('speak');
                });
    </script>
    <script defer type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@WebConfigValues.GoogleApiKey&libraries=places"></script>

}

<style>
    #accordion .card-header {
        max-height: auto !important;
    }
</style>

<article hidden>
    <div class="article">
        <p>
            Adding activities is whatever you need for your group. You can add anything from scratch and save into your catalog so you can use them again.
        </p>
    </div>

</article>
<div class="card">
    <div class="card-body">


        <div class="row">
            <div class="col-lg-2 col-sm-3 col-md-3">
                @Html.Partial("DIYNav", Model.TripId)
            </div>
            <!--end col-md-4-->
            <div class="col-lg-10 col-sm-9 col-md-9" id="eventSupplyContainer">
                <div class="tab-content xs-p">
                    <div class="tab-pane active show" id="link7">
                        <div class="welcome-box alert alert-lite  text-center">
                            <h4>
                                Your Suppliers, Your Tool!
                            </h4>
                            <div class="welb-wrap">
                                <a href="javascript:void(0)" class="btn btn-primary mar-r-30" id="btn-create-event" data-toggle="tooltip" data-placement="top" title="Click here to add your own offerings">Add my Own Activities</a>
                                @if (parentCity)
                                {
                                    var customCatalog = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.CatalogActivities.GetDescription()) : null;
                                    var nameCatalog = customCatalog != null && !string.IsNullOrEmpty(customCatalog.APIText) ? customCatalog.APIText : "Select an Activity from the Catalog";

                                    <a href="javascript:void(0)" class="btn btn-warning" id="btn-show-tariff" data-toggle="tooltip" data-placement="top" title="Select from curated offerings to offer your attendees">@nameCatalog</a>
                                }
                                @{
                                    var customOpenToWeb = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.OpenToWeb.GetDescription()) : null;
                                    //var nameOpenToWeb = customOpenToWeb != null && !string.IsNullOrEmpty(customOpenToWeb.APIText) ? customOpenToWeb.APIText : "Online Registration";
                                    <a href="javascript:void(0)" class="btn btn-default" id="btn-show-opentoWeb" data-toggle="tooltip" data-placement="top" title="Send a custom message & online registration to attendee">Online Registration</a>

                                }

                                @foreach (var hotel in hotelList)
                                {
                                    string title = "";
                                    string nameHotel = string.Empty;
                                    if (hotel.Key.ToString() == EnabledHotelType.TWAI.ToString())
                                    {
                                        title = "Click here to search and pay for rooms";
                                    }
                                    else if (hotel.Key.ToString() == EnabledHotelType.TukMein.ToString())
                                    {
                                        title = "Click here to access timeshare block accomodations";
                                        var customHotelPlanner = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.HotelPlanner.GetDescription()) : null;

                                    }
                                    else
                                    {
                                        title = "Send RFP for group rooms";
                                    }
                                    @*<a href="@(hotel.Value + (hotel.Key.ToUpper() == "TWAI" ? ("&returnUrl=" + Url.Encode(Request.Url.AbsoluteUri)) : "") )" class="btn btn-warning" id="btn-redirect" title="@title">Book Your Hotel(@hotel.Key)</a>*@
                                    if (hotel.Key == "HotelPlanner")
                                    {
                                        var customHotelPlanner = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.HotelPlanner.GetDescription()) : null;
                                        nameHotel = customHotelPlanner != null && !string.IsNullOrEmpty(customHotelPlanner.APIText) ? customHotelPlanner.APIText : "Book Your Hotel";

                                        <a href="javascript:void(0);" id="btn-hotelPlanner" data-toggle="tooltip" data-placement="top" title="@title" class="btn btn-warning">@nameHotel (@hotel.Key) </a>
                                    }
                                    else
                                    {
                                        var customTukmein = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.TukMein.GetDescription()) : null;
                                        nameHotel = customTukmein != null && !string.IsNullOrEmpty(customTukmein.APIText) ? customTukmein.APIText : "Book Your Hotel";

                                        <a href="@(hotel.Value + (hotel.Key.ToUpper() == "TWAI" ? ("&returnUrl=" + Url.Encode(Request.Url.AbsoluteUri)) : "") )" class="btn btn-warning" id="btn-redirect" data-toggle="tooltip" data-placement="top" title="@title">@nameHotel (@hotel.Key)</a>

                                    }

                                }
                                @foreach (var fbooking in flightUrlList)
                                {
                                    string title = string.Empty;
                                    if (fbooking.Key.ToString() == EnableFlightBookingType.TWAI.ToString())
                                    {
                                        title = "Send Request for group air";
                                    }
                                    else if (fbooking.Key.ToString() == EnableFlightBookingType.FlyUs.ToString())
                                    {
                                        title = "Send Request for group air";

                                    }
                                    {
                                        var customflyus = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.Flyus.GetDescription()) : null;
                                        <a href="javascript:void(0);" id="btn-flyusredirect" title="@title" data-toggle="tooltip" data-placement="top" class="btn btn-warning">@(customflyus != null && !string.IsNullOrEmpty(customflyus.APIText) ? customflyus.APIText : "Book your flight") (@fbooking.Key)</a>

                                    }
                                    @*<a href="@(fbooking.Value + (fbooking.Key.ToUpper() == "TWAI" ? ("&returnUrl=" + Url.Encode(Request.Url.AbsoluteUri)) : "") )" class="btn btn-warning" id="btn-redirect" title="@title">Book Your Flight</a>*@

                                }
                                @if (dmcOption.EnablePreferredActivity)
                                {
                                    <a href="javascript:void(0)" class="btn btn-warning" id="btn-show-preferredactivity" data-toggle="tooltip" data-placement="top" title="Select from curated offerings to offer your attendees">Select Preferred Activity</a>
                                }


                                @*@if (dmcOption.EnableFlightBooking)
                                    {
                                        <a href="@((string)tarrifModel.FlightUrl+"&returnUrl="+Url.Encode(Request.Url.AbsoluteUri))" class="btn btn-warning" id="btn-redirect" title="Click here to book air">Book Your Flight</a>
                                    }*@
                                @if (dmcOption.EnableTiqets)
                                {
                                    var customTiqet = customDashboard != null ? customDashboard.FirstOrDefault(a => a.APIName == DashboardAPIUrls.TiqetBooking.GetDescription()) : null;
                                    var nameTiqet = (customTiqet != null && !string.IsNullOrEmpty(customTiqet.APIText) ? customTiqet.APIText : "Book an Activity from the Tiqets");
                                    <a href="@((string)tarrifModel.CatalogUrl)" class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Purchase tickets to offer attendees through online registration">@nameTiqet</a>
                                }
                                @if (dmcOption.EnableCarRental)
                                {
                                    <a href="javascript:void(0)" class="btn btn-primary" data-toggle="tooltip" data-placement="top" title="Rent You Own Car" id="btn-car-rent" data-returnUrl="@(Url.Encode(Request.Url.AbsoluteUri))">Rent Your Own Car</a>
                                }
                                @if (result.Count > 0)
                                {
                                    <a href="javascript:void(0)" class="btn btn-primary" data-toggle="tooltip" data-placement="top" title="Send PO for Approval to Supplier" id="btn-send-PO">Send PO for Approval</a>
                                }
                            </div>
                        </div>
                        <div class="alert subbox alert-lite text-center">
                            <p>
                                To edit an event, supply or supplier, click on the section
                                <br> you would like to edit.
                            </p>
                        </div>

                        <div class="tab-pane">
                            <div class="custom_tab">
                                <div class="btn_warp_pg">
                                    <ul class="nav nav-pills nav-pills-primary diy-wizards" role="tablist">
                                        <li class="nav-item">
                                            <a class="btn btn-primary mar-r-30 active" data-toggle="tab" href="#event-view" role="tab">View By Events</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="btn btn-primary mar-r-30" data-toggle="tab" href="#group-view" id="groupView" role="tab">View By Group</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="tab-content c_tab_content">
                                    <div id="event-view" class="tab-pane active" role="tabpanel">
                                        <div class="tab-content tab-space xs-p" id="tab">
                                            <div class="tab-pane active" id="link1">

                                                <div class="row">
                                                    <div class="col-md-12 button_list_map">
                                                        @if (Model.Events.Count() > 0)
                                                        {
                                                            <a href="#" class="btn btn-danger btn-sm-4 float-right" data-action="show-list">
                                                                <span class="fa fa-th-list"></span> List
                                                            </a>
                                                            <a href="#" class="btn btn-primary btn-sm-4 float-right" data-action="show-map">
                                                                <span class="fa fa-map-marker"></span> Map
                                                            </a>
                                                        }
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div id="mapDiv">
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="card" id="eventList">
                                                    @if (result != null && result.Count > 0)
                                                    {
                                                        foreach (var events in result)
                                                        {
                                                            var eventModel = new Event(events.EventId);
                                                            eventModel.Latitude = events.Latitude;
                                                            eventModel.Longitude = events.Longitude;

                                                            ViewBag.EventId = events.EventId;
                                                            @Html.Partial("_DIYEventInfo", eventModel)

                                                        }
                                                    }
                                                </div> <!--end card-->

                                            </div>
                                        </div>
                                    </div>

                                    @Html.Action("EventGroupList", new { id = Model.TripId })

                                </div>
                            </div>
                        </div>
                    </div> <!--end link 7 _-->

                    <div class="procced-button">
                        <div class="row">

                            <div class="col-md-4">
                                <a class="btn btn-warning" href="/AdminDomain/Trip/diygroupinfo/@Model.TripId">
                                    <span class="btn-label">
                                        <i class="material-icons">keyboard_arrow_left</i>
                                    </span>
                                    Previous
                                </a>
                            </div>

                            <div class="col-md-8 text-right">
                                <a class="btn btn-warning" id="btnNextStep">
                                    <span class="btn-label btn-label-right">
                                        Proceed to Next Step
                                        <i class="material-icons" title="" data-container="body" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Proceed to add passengers and transportation tools or purchase orders for your group.">keyboard_arrow_right info</i>
                                    </span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--end col-md-8-->

        </div>

        <!--end row-->
    </div>
    <!--end card-body-->
</div>
<!--END BUTTON/LINK SECTION-->


<div id="modal-flight" class="modal  text-center diy-modal" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Book  Your Flight</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-12">
                        @{
                            string flighturl = "";
                            var url = flightUrlList.FirstOrDefault(a => a.Key.ToLower() == EnableFlightBookingType.FlyUs.ToString().ToLower());
                            if (url.Value != null)
                            {
                                flighturl = url.Value;
                            }
                        }
                        <iframe src="@flighturl" width="100%" style="min-height: 400px;" class="bookFlight"></iframe>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect text-left" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-hotel" class="modal  text-center diy-modal" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Book  Your Hotel</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">



                <div class="row" style="text-align:left">
                    <div class="col-lg-12 col-md-12 col-sm-12">

                        <label class="col-form-label">Destination</label>
                        @if (Model.TripId > 0)
                        {
                            <select id="Destination" name="Destination" style="width: 100%" class="select2">
                                @if (city != null)
                                {
                                    var option = city.CityName + "," + Country.CountryName;
                                    <option value="@option" selected="selected">@( option)</option>

                                }
                            </select>

                                @*@Html.DropDownListFor(t => t.CountryId, (IEnumerable<SelectListItem>)ViewData["TripInfoPopup_CountryRange"], "", new { @class = "select-simple form-control pmd-select2 select2", style = "width: 100%" })*@
                                }
                                else
                                {
                                @Html.DropDownListFor(t => t.CountryId, (IEnumerable<SelectListItem>)ViewData["Countries"], "", new { @class = "select-simple form-control pmd-select2  select2", style = "width: 100%" })
                                }

                        </div>
                    @*<div class="col-lg-6 col-md-12 col-sm-12">

                        <label class="col-form-label">City</label>
                        @if (Model.TripId > 0)
                        {
                            string cityStr = Model.CityId.ToString();
                            <select id="CityId" name="CityId" class="select-simple form-control pmd-select2 select2" style="width:100%">
                                @{
                                    foreach (var i in (IEnumerable<SelectListItem>)ViewData["TripInfoPopup_CityRange"])
                                    {
                                        <option value="@i.Value" @(cityStr == i.Value ? "selected" : "")>@i.Text</option>
                                    }
                                }
                            </select>
                        }
                        else
                        {
                            @Html.DropDownListFor(t => t.CityId, (IEnumerable<SelectListItem>)ViewData["Cities"], "Please Select City", new { @class = "select2 form-control", style = "width: 100%" })
                        }
                        <input type="hidden" id="#CityName" name="#CityName" />

                    </div>*@
                </div>


                <div class="row" style="text-align:left">
                    <div class="col-lg-6 col-md-12 col-sm-12">
                        <label class="align-left">Chek-In Date</label>
                        <input type='text' class="form-control hpdatepicker" id='StartDate' />

                        @*@Html.TextBox("StartDate", null, "{0:" + SharedLib.Misc.DateTimeFormatter.DefaultStyle + "}", new { @class = "form-control hpdatepicker", autocomplete = "off" })*@
                    </div>
                    <div class="col-lg-6 col-md-12 col-sm-12">
                        <label class="align-left">Check-Out Date</label>
                        <input type='text' class="form-control hpdatepicker" id='EndDate' />
                        @*@Html.TextBox("EndDate", null, "{0:" + SharedLib.Misc.DateTimeFormatter.DefaultStyle + "}", new { @class = "form-control hpdatepicker", autocomplete = "off" })*@
                    </div>

                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary waves-effect text-left" id="btnBookHotel" data-dismiss="modal">Search</button>
                <button type="button" class="btn btn-danger waves-effect text-left" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!--Get start modal-->
<div class="modal  text-center diy-modal" id="GetStartModal" tabindex="-1" role="dialog" aria-labelledby="GetStartModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Let’s get started with an Event!</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body min-h">
                <div class="diy-mtitle">
                    <span>It’s time to start creating your Event.</span><br />
                    <span> Please select an option below to continue </span>
                </div>
                <div class="mb-inner">
                    <div class="diy-btnwrap  text-center">
                        <a href="javascript:void(0)" class="btn btn-diy btn-primary" id="btn-create-event"> Add my Own Activities </a>
                        @if (parentCity)
                        {
                            <a href="javascript:void(0)" class="btn btn-diy btn-warning" id="btn-show-tariff"> Select an Activity from the Catalog </a>
                        }
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<!--end get start modal-->
